AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Store and reply to user messages.

Resources:

  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      TracingEnabled: true

  StoreAndReplyAPIFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: adapterAPI.handler
      Runtime: nodejs14.x
      CodeUri: src/
      Tracing: Active
      AutoPublishAlias: live
      VersionDescription: 'Demo'
      ProvisionedConcurrencyConfig:
          ProvisionedConcurrentExecutions: 2
      DeploymentPreference:
#         Type: Canary10Percent5Minutes
          Type: Linear10PercentEvery1Minute
#         Type: AllAtOnce
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref MessagesTable
        - Statement:
          - Effect: Allow
            Action:
              - 'comprehend:DetectDominantLanguage'
              - 'translate:TranslateText'
            Resource: '*'
        - Statement:
          - Effect: "Allow"
            Action:
              - "cloudwatch:putMetricData"
            Resource: "*"
      Environment:
        Variables:
          MESSAGES_TABLE: !Ref MessagesTable
          REPLY_MESSAGE: 'Hello London! Message submitted via API '
          REPLY_LANGUAGE: 'en'
          METRIC_NAMESPACE: !Ref AWS::StackName
          METRIC_DIMENSION_NAME: 'Interface'
          METRIC_DIMENSION_VALUE: 'API'
          METRIC_NAME: 'Message Chars'
      Events:
        GetResource:
          Type: Api
          Properties:
            Path: /send
            Method: GET
            RestApiId: !Ref MyApi

  StoreAndReplySQSFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: adapterSQS.handler
      Runtime: nodejs12.x
      CodeUri: src/
      Tracing: Active
      AutoPublishAlias: live
      DeploymentPreference:
          Type: AllAtOnce
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref MessagesTable
        - Statement:
          - Effect: Allow
            Action:
              - 'comprehend:DetectDominantLanguage'
              - 'translate:TranslateText'
            Resource: '*'
        - Statement:
          - Effect: "Allow"
            Action:
              - "cloudwatch:putMetricData"
            Resource: "*"
      Environment:
        Variables:
          MESSAGES_TABLE: !Ref MessagesTable
          REPLY_MESSAGE: 'Message submitted via SQS'
          REPLY_LANGUAGE: 'en'
          METRIC_NAMESPACE: !Ref AWS::StackName
          METRIC_DIMENSION_NAME: 'Interface'
          METRIC_DIMENSION_VALUE: 'SQS'
          METRIC_NAME: 'Message Chars'
      Events:
        MySQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt StoreAndReplyQueue.Arn
            BatchSize: 10

  StoreAndReplyQueue:
    Type: AWS::SQS::Queue

  MessagesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: 'PAY_PER_REQUEST'
      AttributeDefinitions:
        - AttributeName: 'user'
          AttributeType: 'S'
        - AttributeName: 'timestamp'
          AttributeType: 'N'
      KeySchema:
        - AttributeName: 'user'
          KeyType: 'HASH'
        - AttributeName: 'timestamp'
          KeyType: 'RANGE'

Outputs:

    StoreAndReplyAPI:
      Description: "API Gateway endpoint URL for Prod stage for StoreAndReplyAPI function"
      Value: !Sub "https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/prod/send/"

    StoreAndReplyQueue:
      Description: "SQS queue processed by the StoreAndReplySQS function"
      Value: !GetAtt StoreAndReplyQueue.QueueName
